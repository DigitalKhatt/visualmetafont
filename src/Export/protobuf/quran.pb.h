// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: quran.proto
// Protobuf C++ Version: 5.29.3

#ifndef quran_2eproto_2epb_2eh
#define quran_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_quran_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_quran_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_quran_2eproto;
namespace protobuf {
class Font;
struct FontDefaultTypeInternal;
extern FontDefaultTypeInternal _Font_default_instance_;
class Font_GlyphsEntry_DoNotUse;
struct Font_GlyphsEntry_DoNotUseDefaultTypeInternal;
extern Font_GlyphsEntry_DoNotUseDefaultTypeInternal _Font_GlyphsEntry_DoNotUse_default_instance_;
class Glyph;
struct GlyphDefaultTypeInternal;
extern GlyphDefaultTypeInternal _Glyph_default_instance_;
class GlyphLayout;
struct GlyphLayoutDefaultTypeInternal;
extern GlyphLayoutDefaultTypeInternal _GlyphLayout_default_instance_;
class LayOut;
struct LayOutDefaultTypeInternal;
extern LayOutDefaultTypeInternal _LayOut_default_instance_;
class Line;
struct LineDefaultTypeInternal;
extern LineDefaultTypeInternal _Line_default_instance_;
class Page;
struct PageDefaultTypeInternal;
extern PageDefaultTypeInternal _Page_default_instance_;
class Path;
struct PathDefaultTypeInternal;
extern PathDefaultTypeInternal _Path_default_instance_;
class PathElem;
struct PathElemDefaultTypeInternal;
extern PathElemDefaultTypeInternal _PathElem_default_instance_;
class Sura;
struct SuraDefaultTypeInternal;
extern SuraDefaultTypeInternal _Sura_default_instance_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class Sura final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Sura) */ {
 public:
  inline Sura() : Sura(nullptr) {}
  ~Sura() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Sura* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Sura));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Sura(
      ::google::protobuf::internal::ConstantInitialized);

  inline Sura(const Sura& from) : Sura(nullptr, from) {}
  inline Sura(Sura&& from) noexcept
      : Sura(nullptr, std::move(from)) {}
  inline Sura& operator=(const Sura& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sura& operator=(Sura&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Sura& default_instance() {
    return *internal_default_instance();
  }
  static inline const Sura* internal_default_instance() {
    return reinterpret_cast<const Sura*>(
        &_Sura_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Sura& a, Sura& b) { a.Swap(&b); }
  inline void Swap(Sura* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Sura* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Sura* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Sura>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Sura& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Sura& from) { Sura::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Sura* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Sura"; }

 protected:
  explicit Sura(::google::protobuf::Arena* arena);
  Sura(::google::protobuf::Arena* arena, const Sura& from);
  Sura(::google::protobuf::Arena* arena, Sura&& from) noexcept
      : Sura(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kPageNumberFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 page_number = 2;
  void clear_page_number() ;
  ::int32_t page_number() const;
  void set_page_number(::int32_t value);

  private:
  ::int32_t _internal_page_number() const;
  void _internal_set_page_number(::int32_t value);

  public:
  // int32 x = 3;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 4;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.Sura)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      26, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Sura& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t page_number_;
    ::int32_t x_;
    ::int32_t y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class PathElem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.PathElem) */ {
 public:
  inline PathElem() : PathElem(nullptr) {}
  ~PathElem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PathElem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PathElem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PathElem(
      ::google::protobuf::internal::ConstantInitialized);

  inline PathElem(const PathElem& from) : PathElem(nullptr, from) {}
  inline PathElem(PathElem&& from) noexcept
      : PathElem(nullptr, std::move(from)) {}
  inline PathElem& operator=(const PathElem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathElem& operator=(PathElem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathElem& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathElem* internal_default_instance() {
    return reinterpret_cast<const PathElem*>(
        &_PathElem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PathElem& a, PathElem& b) { a.Swap(&b); }
  inline void Swap(PathElem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathElem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathElem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PathElem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PathElem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PathElem& from) { PathElem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PathElem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.PathElem"; }

 protected:
  explicit PathElem(::google::protobuf::Arena* arena);
  PathElem(::google::protobuf::Arena* arena, const PathElem& from);
  PathElem(::google::protobuf::Arena* arena, PathElem&& from) noexcept
      : PathElem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 1,
  };
  // repeated double points = 1;
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  double points(int index) const;
  void set_points(int index, double value);
  void add_points(double value);
  const ::google::protobuf::RepeatedField<double>& points() const;
  ::google::protobuf::RepeatedField<double>* mutable_points();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_points() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_points();

  public:
  // @@protoc_insertion_point(class_scope:protobuf.PathElem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PathElem& from_msg);
    ::google::protobuf::RepeatedField<double> points_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class GlyphLayout final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.GlyphLayout) */ {
 public:
  inline GlyphLayout() : GlyphLayout(nullptr) {}
  ~GlyphLayout() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GlyphLayout* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GlyphLayout));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GlyphLayout(
      ::google::protobuf::internal::ConstantInitialized);

  inline GlyphLayout(const GlyphLayout& from) : GlyphLayout(nullptr, from) {}
  inline GlyphLayout(GlyphLayout&& from) noexcept
      : GlyphLayout(nullptr, std::move(from)) {}
  inline GlyphLayout& operator=(const GlyphLayout& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlyphLayout& operator=(GlyphLayout&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlyphLayout& default_instance() {
    return *internal_default_instance();
  }
  static inline const GlyphLayout* internal_default_instance() {
    return reinterpret_cast<const GlyphLayout*>(
        &_GlyphLayout_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GlyphLayout& a, GlyphLayout& b) { a.Swap(&b); }
  inline void Swap(GlyphLayout* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlyphLayout* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlyphLayout* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GlyphLayout>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GlyphLayout& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GlyphLayout& from) { GlyphLayout::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GlyphLayout* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.GlyphLayout"; }

 protected:
  explicit GlyphLayout(::google::protobuf::Arena* arena);
  GlyphLayout(::google::protobuf::Arena* arena, const GlyphLayout& from);
  GlyphLayout(::google::protobuf::Arena* arena, GlyphLayout&& from) noexcept
      : GlyphLayout(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodepointFieldNumber = 1,
    kClusterFieldNumber = 2,
    kXAdvanceFieldNumber = 3,
    kXOffsetFieldNumber = 4,
    kYOffsetFieldNumber = 5,
    kColorFieldNumber = 6,
    kLefttatweelFieldNumber = 7,
    kRighttatweelFieldNumber = 8,
    kBeginsajdaFieldNumber = 9,
    kEndsajdaFieldNumber = 10,
  };
  // int32 codepoint = 1;
  void clear_codepoint() ;
  ::int32_t codepoint() const;
  void set_codepoint(::int32_t value);

  private:
  ::int32_t _internal_codepoint() const;
  void _internal_set_codepoint(::int32_t value);

  public:
  // int32 cluster = 2;
  void clear_cluster() ;
  ::int32_t cluster() const;
  void set_cluster(::int32_t value);

  private:
  ::int32_t _internal_cluster() const;
  void _internal_set_cluster(::int32_t value);

  public:
  // optional int32 x_advance = 3;
  bool has_x_advance() const;
  void clear_x_advance() ;
  ::int32_t x_advance() const;
  void set_x_advance(::int32_t value);

  private:
  ::int32_t _internal_x_advance() const;
  void _internal_set_x_advance(::int32_t value);

  public:
  // optional int32 x_offset = 4;
  bool has_x_offset() const;
  void clear_x_offset() ;
  ::int32_t x_offset() const;
  void set_x_offset(::int32_t value);

  private:
  ::int32_t _internal_x_offset() const;
  void _internal_set_x_offset(::int32_t value);

  public:
  // optional int32 y_offset = 5;
  bool has_y_offset() const;
  void clear_y_offset() ;
  ::int32_t y_offset() const;
  void set_y_offset(::int32_t value);

  private:
  ::int32_t _internal_y_offset() const;
  void _internal_set_y_offset(::int32_t value);

  public:
  // optional int32 color = 6;
  bool has_color() const;
  void clear_color() ;
  ::int32_t color() const;
  void set_color(::int32_t value);

  private:
  ::int32_t _internal_color() const;
  void _internal_set_color(::int32_t value);

  public:
  // optional double lefttatweel = 7;
  bool has_lefttatweel() const;
  void clear_lefttatweel() ;
  double lefttatweel() const;
  void set_lefttatweel(double value);

  private:
  double _internal_lefttatweel() const;
  void _internal_set_lefttatweel(double value);

  public:
  // optional double righttatweel = 8;
  bool has_righttatweel() const;
  void clear_righttatweel() ;
  double righttatweel() const;
  void set_righttatweel(double value);

  private:
  double _internal_righttatweel() const;
  void _internal_set_righttatweel(double value);

  public:
  // optional bool beginsajda = 9;
  bool has_beginsajda() const;
  void clear_beginsajda() ;
  bool beginsajda() const;
  void set_beginsajda(bool value);

  private:
  bool _internal_beginsajda() const;
  void _internal_set_beginsajda(bool value);

  public:
  // optional bool endsajda = 10;
  bool has_endsajda() const;
  void clear_endsajda() ;
  bool endsajda() const;
  void set_endsajda(bool value);

  private:
  bool _internal_endsajda() const;
  void _internal_set_endsajda(bool value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.GlyphLayout)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GlyphLayout& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t codepoint_;
    ::int32_t cluster_;
    ::int32_t x_advance_;
    ::int32_t x_offset_;
    ::int32_t y_offset_;
    ::int32_t color_;
    double lefttatweel_;
    double righttatweel_;
    bool beginsajda_;
    bool endsajda_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class Path final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Path) */ {
 public:
  inline Path() : Path(nullptr) {}
  ~Path() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Path* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Path));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Path(
      ::google::protobuf::internal::ConstantInitialized);

  inline Path(const Path& from) : Path(nullptr, from) {}
  inline Path(Path&& from) noexcept
      : Path(nullptr, std::move(from)) {}
  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }
  inline Path& operator=(Path&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Path& default_instance() {
    return *internal_default_instance();
  }
  static inline const Path* internal_default_instance() {
    return reinterpret_cast<const Path*>(
        &_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Path& a, Path& b) { a.Swap(&b); }
  inline void Swap(Path* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Path* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Path* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Path>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Path& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Path& from) { Path::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Path* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Path"; }

 protected:
  explicit Path(::google::protobuf::Arena* arena);
  Path(::google::protobuf::Arena* arena, const Path& from);
  Path(::google::protobuf::Arena* arena, Path&& from) noexcept
      : Path(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kElemsFieldNumber = 1,
    kColorFieldNumber = 2,
  };
  // repeated .protobuf.PathElem elems = 1;
  int elems_size() const;
  private:
  int _internal_elems_size() const;

  public:
  void clear_elems() ;
  ::protobuf::PathElem* mutable_elems(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>* mutable_elems();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>& _internal_elems() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>* _internal_mutable_elems();
  public:
  const ::protobuf::PathElem& elems(int index) const;
  ::protobuf::PathElem* add_elems();
  const ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>& elems() const;
  // repeated double color = 2;
  int color_size() const;
  private:
  int _internal_color_size() const;

  public:
  void clear_color() ;
  double color(int index) const;
  void set_color(int index, double value);
  void add_color(double value);
  const ::google::protobuf::RepeatedField<double>& color() const;
  ::google::protobuf::RepeatedField<double>* mutable_color();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_color() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_color();

  public:
  // @@protoc_insertion_point(class_scope:protobuf.Path)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Path& from_msg);
    ::google::protobuf::RepeatedPtrField< ::protobuf::PathElem > elems_;
    ::google::protobuf::RepeatedField<double> color_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class Line final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Line) */ {
 public:
  inline Line() : Line(nullptr) {}
  ~Line() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Line* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Line));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Line(
      ::google::protobuf::internal::ConstantInitialized);

  inline Line(const Line& from) : Line(nullptr, from) {}
  inline Line(Line&& from) noexcept
      : Line(nullptr, std::move(from)) {}
  inline Line& operator=(const Line& from) {
    CopyFrom(from);
    return *this;
  }
  inline Line& operator=(Line&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Line& default_instance() {
    return *internal_default_instance();
  }
  static inline const Line* internal_default_instance() {
    return reinterpret_cast<const Line*>(
        &_Line_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Line& a, Line& b) { a.Swap(&b); }
  inline void Swap(Line* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Line* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Line* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Line>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Line& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Line& from) { Line::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Line* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Line"; }

 protected:
  explicit Line(::google::protobuf::Arena* arena);
  Line(::google::protobuf::Arena* arena, const Line& from);
  Line(::google::protobuf::Arena* arena, Line&& from) noexcept
      : Line(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGlyphsFieldNumber = 5,
    kTextFieldNumber = 4,
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // repeated .protobuf.GlyphLayout glyphs = 5;
  int glyphs_size() const;
  private:
  int _internal_glyphs_size() const;

  public:
  void clear_glyphs() ;
  ::protobuf::GlyphLayout* mutable_glyphs(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>* mutable_glyphs();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>& _internal_glyphs() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>* _internal_mutable_glyphs();
  public:
  const ::protobuf::GlyphLayout& glyphs(int index) const;
  ::protobuf::GlyphLayout* add_glyphs();
  const ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>& glyphs() const;
  // string text = 4;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // int32 type = 1;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // int32 x = 2;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 3;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.Line)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      26, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Line& from_msg);
    ::google::protobuf::RepeatedPtrField< ::protobuf::GlyphLayout > glyphs_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::int32_t type_;
    ::int32_t x_;
    ::int32_t y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class Page final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Page) */ {
 public:
  inline Page() : Page(nullptr) {}
  ~Page() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Page* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Page));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Page(
      ::google::protobuf::internal::ConstantInitialized);

  inline Page(const Page& from) : Page(nullptr, from) {}
  inline Page(Page&& from) noexcept
      : Page(nullptr, std::move(from)) {}
  inline Page& operator=(const Page& from) {
    CopyFrom(from);
    return *this;
  }
  inline Page& operator=(Page&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Page& default_instance() {
    return *internal_default_instance();
  }
  static inline const Page* internal_default_instance() {
    return reinterpret_cast<const Page*>(
        &_Page_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Page& a, Page& b) { a.Swap(&b); }
  inline void Swap(Page* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Page* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Page* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Page>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Page& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Page& from) { Page::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Page* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Page"; }

 protected:
  explicit Page(::google::protobuf::Arena* arena);
  Page(::google::protobuf::Arena* arena, const Page& from);
  Page(::google::protobuf::Arena* arena, Page&& from) noexcept
      : Page(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinesFieldNumber = 1,
  };
  // repeated .protobuf.Line lines = 1;
  int lines_size() const;
  private:
  int _internal_lines_size() const;

  public:
  void clear_lines() ;
  ::protobuf::Line* mutable_lines(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Line>* mutable_lines();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Line>& _internal_lines() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Line>* _internal_mutable_lines();
  public:
  const ::protobuf::Line& lines(int index) const;
  ::protobuf::Line* add_lines();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Line>& lines() const;
  // @@protoc_insertion_point(class_scope:protobuf.Page)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Page& from_msg);
    ::google::protobuf::RepeatedPtrField< ::protobuf::Line > lines_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class Glyph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Glyph) */ {
 public:
  inline Glyph() : Glyph(nullptr) {}
  ~Glyph() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Glyph* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Glyph));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Glyph(
      ::google::protobuf::internal::ConstantInitialized);

  inline Glyph(const Glyph& from) : Glyph(nullptr, from) {}
  inline Glyph(Glyph&& from) noexcept
      : Glyph(nullptr, std::move(from)) {}
  inline Glyph& operator=(const Glyph& from) {
    CopyFrom(from);
    return *this;
  }
  inline Glyph& operator=(Glyph&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Glyph& default_instance() {
    return *internal_default_instance();
  }
  static inline const Glyph* internal_default_instance() {
    return reinterpret_cast<const Glyph*>(
        &_Glyph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Glyph& a, Glyph& b) { a.Swap(&b); }
  inline void Swap(Glyph* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Glyph* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Glyph* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Glyph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Glyph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Glyph& from) { Glyph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Glyph* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Glyph"; }

 protected:
  explicit Glyph(::google::protobuf::Arena* arena);
  Glyph(::google::protobuf::Arena* arena, const Glyph& from);
  Glyph(::google::protobuf::Arena* arena, Glyph&& from) noexcept
      : Glyph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBboxFieldNumber = 2,
    kDefaultFieldNumber = 3,
    kLimitsFieldNumber = 4,
    kMinLeftFieldNumber = 5,
    kMaxLeftFieldNumber = 6,
    kMinRightFieldNumber = 7,
    kMaxRightFieldNumber = 8,
    kNameFieldNumber = 1,
  };
  // repeated double bbox = 2;
  int bbox_size() const;
  private:
  int _internal_bbox_size() const;

  public:
  void clear_bbox() ;
  double bbox(int index) const;
  void set_bbox(int index, double value);
  void add_bbox(double value);
  const ::google::protobuf::RepeatedField<double>& bbox() const;
  ::google::protobuf::RepeatedField<double>* mutable_bbox();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_bbox() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_bbox();

  public:
  // repeated .protobuf.Path default = 3;
  int default__size() const;
  private:
  int _internal_default__size() const;

  public:
  void clear_default_() ;
  ::protobuf::Path* mutable_default_(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* mutable_default_();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& _internal_default_() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* _internal_mutable_default_();
  public:
  const ::protobuf::Path& default_(int index) const;
  ::protobuf::Path* add_default_();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& default_() const;
  // repeated double limits = 4;
  int limits_size() const;
  private:
  int _internal_limits_size() const;

  public:
  void clear_limits() ;
  double limits(int index) const;
  void set_limits(int index, double value);
  void add_limits(double value);
  const ::google::protobuf::RepeatedField<double>& limits() const;
  ::google::protobuf::RepeatedField<double>* mutable_limits();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_limits() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_limits();

  public:
  // repeated .protobuf.Path minLeft = 5;
  int minleft_size() const;
  private:
  int _internal_minleft_size() const;

  public:
  void clear_minleft() ;
  ::protobuf::Path* mutable_minleft(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* mutable_minleft();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& _internal_minleft() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* _internal_mutable_minleft();
  public:
  const ::protobuf::Path& minleft(int index) const;
  ::protobuf::Path* add_minleft();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& minleft() const;
  // repeated .protobuf.Path maxLeft = 6;
  int maxleft_size() const;
  private:
  int _internal_maxleft_size() const;

  public:
  void clear_maxleft() ;
  ::protobuf::Path* mutable_maxleft(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* mutable_maxleft();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& _internal_maxleft() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* _internal_mutable_maxleft();
  public:
  const ::protobuf::Path& maxleft(int index) const;
  ::protobuf::Path* add_maxleft();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& maxleft() const;
  // repeated .protobuf.Path minRight = 7;
  int minright_size() const;
  private:
  int _internal_minright_size() const;

  public:
  void clear_minright() ;
  ::protobuf::Path* mutable_minright(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* mutable_minright();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& _internal_minright() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* _internal_mutable_minright();
  public:
  const ::protobuf::Path& minright(int index) const;
  ::protobuf::Path* add_minright();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& minright() const;
  // repeated .protobuf.Path maxRight = 8;
  int maxright_size() const;
  private:
  int _internal_maxright_size() const;

  public:
  void clear_maxright() ;
  ::protobuf::Path* mutable_maxright(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* mutable_maxright();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& _internal_maxright() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Path>* _internal_mutable_maxright();
  public:
  const ::protobuf::Path& maxright(int index) const;
  ::protobuf::Path* add_maxright();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& maxright() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:protobuf.Glyph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 5,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Glyph& from_msg);
    ::google::protobuf::RepeatedField<double> bbox_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Path > default__;
    ::google::protobuf::RepeatedField<double> limits_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Path > minleft_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Path > maxleft_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Path > minright_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Path > maxright_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class LayOut final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.LayOut) */ {
 public:
  inline LayOut() : LayOut(nullptr) {}
  ~LayOut() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LayOut* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LayOut));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LayOut(
      ::google::protobuf::internal::ConstantInitialized);

  inline LayOut(const LayOut& from) : LayOut(nullptr, from) {}
  inline LayOut(LayOut&& from) noexcept
      : LayOut(nullptr, std::move(from)) {}
  inline LayOut& operator=(const LayOut& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayOut& operator=(LayOut&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LayOut& default_instance() {
    return *internal_default_instance();
  }
  static inline const LayOut* internal_default_instance() {
    return reinterpret_cast<const LayOut*>(
        &_LayOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LayOut& a, LayOut& b) { a.Swap(&b); }
  inline void Swap(LayOut* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LayOut* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LayOut* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LayOut>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LayOut& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LayOut& from) { LayOut::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LayOut* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.LayOut"; }

 protected:
  explicit LayOut(::google::protobuf::Arena* arena);
  LayOut(::google::protobuf::Arena* arena, const LayOut& from);
  LayOut(::google::protobuf::Arena* arena, LayOut&& from) noexcept
      : LayOut(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPagesFieldNumber = 1,
    kSurasFieldNumber = 2,
  };
  // repeated .protobuf.Page pages = 1;
  int pages_size() const;
  private:
  int _internal_pages_size() const;

  public:
  void clear_pages() ;
  ::protobuf::Page* mutable_pages(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Page>* mutable_pages();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Page>& _internal_pages() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Page>* _internal_mutable_pages();
  public:
  const ::protobuf::Page& pages(int index) const;
  ::protobuf::Page* add_pages();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Page>& pages() const;
  // repeated .protobuf.Sura suras = 2;
  int suras_size() const;
  private:
  int _internal_suras_size() const;

  public:
  void clear_suras() ;
  ::protobuf::Sura* mutable_suras(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::Sura>* mutable_suras();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::Sura>& _internal_suras() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::Sura>* _internal_mutable_suras();
  public:
  const ::protobuf::Sura& suras(int index) const;
  ::protobuf::Sura* add_suras();
  const ::google::protobuf::RepeatedPtrField<::protobuf::Sura>& suras() const;
  // @@protoc_insertion_point(class_scope:protobuf.LayOut)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LayOut& from_msg);
    ::google::protobuf::RepeatedPtrField< ::protobuf::Page > pages_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::Sura > suras_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};
// -------------------------------------------------------------------

class Font_GlyphsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::int32_t, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::int32_t, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Font_GlyphsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Font_GlyphsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Font_GlyphsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Font_GlyphsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Font_GlyphsEntry_DoNotUse*>(
        &_Font_GlyphsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_quran_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Font final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.Font) */ {
 public:
  inline Font() : Font(nullptr) {}
  ~Font() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Font* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Font));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Font(
      ::google::protobuf::internal::ConstantInitialized);

  inline Font(const Font& from) : Font(nullptr, from) {}
  inline Font(Font&& from) noexcept
      : Font(nullptr, std::move(from)) {}
  inline Font& operator=(const Font& from) {
    CopyFrom(from);
    return *this;
  }
  inline Font& operator=(Font&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Font& default_instance() {
    return *internal_default_instance();
  }
  static inline const Font* internal_default_instance() {
    return reinterpret_cast<const Font*>(
        &_Font_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Font& a, Font& b) { a.Swap(&b); }
  inline void Swap(Font* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Font* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Font* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Font>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Font& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Font& from) { Font::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Font* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.Font"; }

 protected:
  explicit Font(::google::protobuf::Arena* arena);
  Font(::google::protobuf::Arena* arena, const Font& from);
  Font(::google::protobuf::Arena* arena, Font&& from) noexcept
      : Font(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGlyphsFieldNumber = 1,
  };
  // map<int32, .protobuf.Glyph> glyphs = 1;
  int glyphs_size() const;
  private:
  int _internal_glyphs_size() const;

  public:
  void clear_glyphs() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>& glyphs() const;
  ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>* mutable_glyphs();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>& _internal_glyphs() const;
  ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>* _internal_mutable_glyphs();

  public:
  // @@protoc_insertion_point(class_scope:protobuf.Font)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Font& from_msg);
    ::google::protobuf::internal::MapField<Font_GlyphsEntry_DoNotUse, ::int32_t, ::protobuf::Glyph,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        glyphs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_quran_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Font

// map<int32, .protobuf.Glyph> glyphs = 1;
inline int Font::_internal_glyphs_size() const {
  return _internal_glyphs().size();
}
inline int Font::glyphs_size() const {
  return _internal_glyphs_size();
}
inline void Font::clear_glyphs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.glyphs_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>& Font::_internal_glyphs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.glyphs_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>& Font::glyphs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf.Font.glyphs)
  return _internal_glyphs();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>* Font::_internal_mutable_glyphs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.glyphs_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf::Glyph>* Font::mutable_glyphs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf.Font.glyphs)
  return _internal_mutable_glyphs();
}

// -------------------------------------------------------------------

// Glyph

// string name = 1;
inline void Glyph::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Glyph::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Glyph::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.Glyph.name)
}
inline std::string* Glyph::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.name)
  return _s;
}
inline const std::string& Glyph::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Glyph::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Glyph::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Glyph::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.Glyph.name)
  return _impl_.name_.Release();
}
inline void Glyph::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Glyph.name)
}

// repeated double bbox = 2;
inline int Glyph::_internal_bbox_size() const {
  return _internal_bbox().size();
}
inline int Glyph::bbox_size() const {
  return _internal_bbox_size();
}
inline void Glyph::clear_bbox() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bbox_.Clear();
}
inline double Glyph::bbox(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.bbox)
  return _internal_bbox().Get(index);
}
inline void Glyph::set_bbox(int index, double value) {
  _internal_mutable_bbox()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.Glyph.bbox)
}
inline void Glyph::add_bbox(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bbox()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf.Glyph.bbox)
}
inline const ::google::protobuf::RepeatedField<double>& Glyph::bbox() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.bbox)
  return _internal_bbox();
}
inline ::google::protobuf::RepeatedField<double>* Glyph::mutable_bbox()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.bbox)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bbox();
}
inline const ::google::protobuf::RepeatedField<double>&
Glyph::_internal_bbox() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bbox_;
}
inline ::google::protobuf::RepeatedField<double>* Glyph::_internal_mutable_bbox() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bbox_;
}

// repeated .protobuf.Path default = 3;
inline int Glyph::_internal_default__size() const {
  return _internal_default_().size();
}
inline int Glyph::default__size() const {
  return _internal_default__size();
}
inline void Glyph::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Clear();
}
inline ::protobuf::Path* Glyph::mutable_default_(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.default)
  return _internal_mutable_default_()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>* Glyph::mutable_default_()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.default)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_default_();
}
inline const ::protobuf::Path& Glyph::default_(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.default)
  return _internal_default_().Get(index);
}
inline ::protobuf::Path* Glyph::add_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Path* _add = _internal_mutable_default_()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Glyph.default)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& Glyph::default_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.default)
  return _internal_default_();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>&
Glyph::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>*
Glyph::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.default__;
}

// repeated double limits = 4;
inline int Glyph::_internal_limits_size() const {
  return _internal_limits().size();
}
inline int Glyph::limits_size() const {
  return _internal_limits_size();
}
inline void Glyph::clear_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limits_.Clear();
}
inline double Glyph::limits(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.limits)
  return _internal_limits().Get(index);
}
inline void Glyph::set_limits(int index, double value) {
  _internal_mutable_limits()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.Glyph.limits)
}
inline void Glyph::add_limits(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_limits()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf.Glyph.limits)
}
inline const ::google::protobuf::RepeatedField<double>& Glyph::limits() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.limits)
  return _internal_limits();
}
inline ::google::protobuf::RepeatedField<double>* Glyph::mutable_limits()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.limits)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_limits();
}
inline const ::google::protobuf::RepeatedField<double>&
Glyph::_internal_limits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limits_;
}
inline ::google::protobuf::RepeatedField<double>* Glyph::_internal_mutable_limits() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.limits_;
}

// repeated .protobuf.Path minLeft = 5;
inline int Glyph::_internal_minleft_size() const {
  return _internal_minleft().size();
}
inline int Glyph::minleft_size() const {
  return _internal_minleft_size();
}
inline void Glyph::clear_minleft() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minleft_.Clear();
}
inline ::protobuf::Path* Glyph::mutable_minleft(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.minLeft)
  return _internal_mutable_minleft()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>* Glyph::mutable_minleft()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.minLeft)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_minleft();
}
inline const ::protobuf::Path& Glyph::minleft(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.minLeft)
  return _internal_minleft().Get(index);
}
inline ::protobuf::Path* Glyph::add_minleft() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Path* _add = _internal_mutable_minleft()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Glyph.minLeft)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& Glyph::minleft() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.minLeft)
  return _internal_minleft();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>&
Glyph::_internal_minleft() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minleft_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>*
Glyph::_internal_mutable_minleft() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.minleft_;
}

// repeated .protobuf.Path maxLeft = 6;
inline int Glyph::_internal_maxleft_size() const {
  return _internal_maxleft().size();
}
inline int Glyph::maxleft_size() const {
  return _internal_maxleft_size();
}
inline void Glyph::clear_maxleft() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxleft_.Clear();
}
inline ::protobuf::Path* Glyph::mutable_maxleft(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.maxLeft)
  return _internal_mutable_maxleft()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>* Glyph::mutable_maxleft()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.maxLeft)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_maxleft();
}
inline const ::protobuf::Path& Glyph::maxleft(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.maxLeft)
  return _internal_maxleft().Get(index);
}
inline ::protobuf::Path* Glyph::add_maxleft() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Path* _add = _internal_mutable_maxleft()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Glyph.maxLeft)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& Glyph::maxleft() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.maxLeft)
  return _internal_maxleft();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>&
Glyph::_internal_maxleft() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxleft_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>*
Glyph::_internal_mutable_maxleft() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.maxleft_;
}

// repeated .protobuf.Path minRight = 7;
inline int Glyph::_internal_minright_size() const {
  return _internal_minright().size();
}
inline int Glyph::minright_size() const {
  return _internal_minright_size();
}
inline void Glyph::clear_minright() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minright_.Clear();
}
inline ::protobuf::Path* Glyph::mutable_minright(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.minRight)
  return _internal_mutable_minright()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>* Glyph::mutable_minright()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.minRight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_minright();
}
inline const ::protobuf::Path& Glyph::minright(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.minRight)
  return _internal_minright().Get(index);
}
inline ::protobuf::Path* Glyph::add_minright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Path* _add = _internal_mutable_minright()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Glyph.minRight)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& Glyph::minright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.minRight)
  return _internal_minright();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>&
Glyph::_internal_minright() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minright_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>*
Glyph::_internal_mutable_minright() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.minright_;
}

// repeated .protobuf.Path maxRight = 8;
inline int Glyph::_internal_maxright_size() const {
  return _internal_maxright().size();
}
inline int Glyph::maxright_size() const {
  return _internal_maxright_size();
}
inline void Glyph::clear_maxright() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxright_.Clear();
}
inline ::protobuf::Path* Glyph::mutable_maxright(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Glyph.maxRight)
  return _internal_mutable_maxright()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>* Glyph::mutable_maxright()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Glyph.maxRight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_maxright();
}
inline const ::protobuf::Path& Glyph::maxright(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Glyph.maxRight)
  return _internal_maxright().Get(index);
}
inline ::protobuf::Path* Glyph::add_maxright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Path* _add = _internal_mutable_maxright()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Glyph.maxRight)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>& Glyph::maxright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Glyph.maxRight)
  return _internal_maxright();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Path>&
Glyph::_internal_maxright() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxright_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Path>*
Glyph::_internal_mutable_maxright() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.maxright_;
}

// -------------------------------------------------------------------

// Path

// repeated .protobuf.PathElem elems = 1;
inline int Path::_internal_elems_size() const {
  return _internal_elems().size();
}
inline int Path::elems_size() const {
  return _internal_elems_size();
}
inline void Path::clear_elems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elems_.Clear();
}
inline ::protobuf::PathElem* Path::mutable_elems(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Path.elems)
  return _internal_mutable_elems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>* Path::mutable_elems()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Path.elems)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_elems();
}
inline const ::protobuf::PathElem& Path::elems(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Path.elems)
  return _internal_elems().Get(index);
}
inline ::protobuf::PathElem* Path::add_elems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::PathElem* _add = _internal_mutable_elems()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Path.elems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>& Path::elems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Path.elems)
  return _internal_elems();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>&
Path::_internal_elems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elems_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::PathElem>*
Path::_internal_mutable_elems() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.elems_;
}

// repeated double color = 2;
inline int Path::_internal_color_size() const {
  return _internal_color().size();
}
inline int Path::color_size() const {
  return _internal_color_size();
}
inline void Path::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Clear();
}
inline double Path::color(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Path.color)
  return _internal_color().Get(index);
}
inline void Path::set_color(int index, double value) {
  _internal_mutable_color()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.Path.color)
}
inline void Path::add_color(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_color()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf.Path.color)
}
inline const ::google::protobuf::RepeatedField<double>& Path::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Path.color)
  return _internal_color();
}
inline ::google::protobuf::RepeatedField<double>* Path::mutable_color()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Path.color)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_color();
}
inline const ::google::protobuf::RepeatedField<double>&
Path::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_;
}
inline ::google::protobuf::RepeatedField<double>* Path::_internal_mutable_color() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.color_;
}

// -------------------------------------------------------------------

// PathElem

// repeated double points = 1;
inline int PathElem::_internal_points_size() const {
  return _internal_points().size();
}
inline int PathElem::points_size() const {
  return _internal_points_size();
}
inline void PathElem::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline double PathElem::points(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.PathElem.points)
  return _internal_points().Get(index);
}
inline void PathElem::set_points(int index, double value) {
  _internal_mutable_points()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.PathElem.points)
}
inline void PathElem::add_points(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_points()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf.PathElem.points)
}
inline const ::google::protobuf::RepeatedField<double>& PathElem::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.PathElem.points)
  return _internal_points();
}
inline ::google::protobuf::RepeatedField<double>* PathElem::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.PathElem.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::google::protobuf::RepeatedField<double>&
PathElem::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedField<double>* PathElem::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// -------------------------------------------------------------------

// LayOut

// repeated .protobuf.Page pages = 1;
inline int LayOut::_internal_pages_size() const {
  return _internal_pages().size();
}
inline int LayOut::pages_size() const {
  return _internal_pages_size();
}
inline void LayOut::clear_pages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pages_.Clear();
}
inline ::protobuf::Page* LayOut::mutable_pages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.LayOut.pages)
  return _internal_mutable_pages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Page>* LayOut::mutable_pages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.LayOut.pages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pages();
}
inline const ::protobuf::Page& LayOut::pages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.LayOut.pages)
  return _internal_pages().Get(index);
}
inline ::protobuf::Page* LayOut::add_pages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Page* _add = _internal_mutable_pages()->Add();
  // @@protoc_insertion_point(field_add:protobuf.LayOut.pages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Page>& LayOut::pages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.LayOut.pages)
  return _internal_pages();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Page>&
LayOut::_internal_pages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pages_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Page>*
LayOut::_internal_mutable_pages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pages_;
}

// repeated .protobuf.Sura suras = 2;
inline int LayOut::_internal_suras_size() const {
  return _internal_suras().size();
}
inline int LayOut::suras_size() const {
  return _internal_suras_size();
}
inline void LayOut::clear_suras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suras_.Clear();
}
inline ::protobuf::Sura* LayOut::mutable_suras(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.LayOut.suras)
  return _internal_mutable_suras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Sura>* LayOut::mutable_suras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.LayOut.suras)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suras();
}
inline const ::protobuf::Sura& LayOut::suras(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.LayOut.suras)
  return _internal_suras().Get(index);
}
inline ::protobuf::Sura* LayOut::add_suras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Sura* _add = _internal_mutable_suras()->Add();
  // @@protoc_insertion_point(field_add:protobuf.LayOut.suras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Sura>& LayOut::suras() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.LayOut.suras)
  return _internal_suras();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Sura>&
LayOut::_internal_suras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suras_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Sura>*
LayOut::_internal_mutable_suras() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suras_;
}

// -------------------------------------------------------------------

// Page

// repeated .protobuf.Line lines = 1;
inline int Page::_internal_lines_size() const {
  return _internal_lines().size();
}
inline int Page::lines_size() const {
  return _internal_lines_size();
}
inline void Page::clear_lines() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lines_.Clear();
}
inline ::protobuf::Line* Page::mutable_lines(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Page.lines)
  return _internal_mutable_lines()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Line>* Page::mutable_lines()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Page.lines)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lines();
}
inline const ::protobuf::Line& Page::lines(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Page.lines)
  return _internal_lines().Get(index);
}
inline ::protobuf::Line* Page::add_lines() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::Line* _add = _internal_mutable_lines()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Page.lines)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Line>& Page::lines() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Page.lines)
  return _internal_lines();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::Line>&
Page::_internal_lines() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lines_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::Line>*
Page::_internal_mutable_lines() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lines_;
}

// -------------------------------------------------------------------

// Line

// int32 type = 1;
inline void Line::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::int32_t Line::type() const {
  // @@protoc_insertion_point(field_get:protobuf.Line.type)
  return _internal_type();
}
inline void Line::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:protobuf.Line.type)
}
inline ::int32_t Line::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void Line::_internal_set_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// int32 x = 2;
inline void Line::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t Line::x() const {
  // @@protoc_insertion_point(field_get:protobuf.Line.x)
  return _internal_x();
}
inline void Line::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.Line.x)
}
inline ::int32_t Line::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Line::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 3;
inline void Line::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t Line::y() const {
  // @@protoc_insertion_point(field_get:protobuf.Line.y)
  return _internal_y();
}
inline void Line::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.Line.y)
}
inline ::int32_t Line::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Line::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// string text = 4;
inline void Line::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& Line::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Line.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Line::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.Line.text)
}
inline std::string* Line::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:protobuf.Line.text)
  return _s;
}
inline const std::string& Line::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void Line::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(value, GetArena());
}
inline std::string* Line::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* Line::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.Line.text)
  return _impl_.text_.Release();
}
inline void Line::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Line.text)
}

// repeated .protobuf.GlyphLayout glyphs = 5;
inline int Line::_internal_glyphs_size() const {
  return _internal_glyphs().size();
}
inline int Line::glyphs_size() const {
  return _internal_glyphs_size();
}
inline void Line::clear_glyphs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.glyphs_.Clear();
}
inline ::protobuf::GlyphLayout* Line::mutable_glyphs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.Line.glyphs)
  return _internal_mutable_glyphs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>* Line::mutable_glyphs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Line.glyphs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_glyphs();
}
inline const ::protobuf::GlyphLayout& Line::glyphs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Line.glyphs)
  return _internal_glyphs().Get(index);
}
inline ::protobuf::GlyphLayout* Line::add_glyphs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::GlyphLayout* _add = _internal_mutable_glyphs()->Add();
  // @@protoc_insertion_point(field_add:protobuf.Line.glyphs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>& Line::glyphs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.Line.glyphs)
  return _internal_glyphs();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>&
Line::_internal_glyphs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.glyphs_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::GlyphLayout>*
Line::_internal_mutable_glyphs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.glyphs_;
}

// -------------------------------------------------------------------

// GlyphLayout

// int32 codepoint = 1;
inline void GlyphLayout::clear_codepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codepoint_ = 0;
}
inline ::int32_t GlyphLayout::codepoint() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.codepoint)
  return _internal_codepoint();
}
inline void GlyphLayout::set_codepoint(::int32_t value) {
  _internal_set_codepoint(value);
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.codepoint)
}
inline ::int32_t GlyphLayout::_internal_codepoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.codepoint_;
}
inline void GlyphLayout::_internal_set_codepoint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codepoint_ = value;
}

// int32 cluster = 2;
inline void GlyphLayout::clear_cluster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_ = 0;
}
inline ::int32_t GlyphLayout::cluster() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.cluster)
  return _internal_cluster();
}
inline void GlyphLayout::set_cluster(::int32_t value) {
  _internal_set_cluster(value);
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.cluster)
}
inline ::int32_t GlyphLayout::_internal_cluster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_;
}
inline void GlyphLayout::_internal_set_cluster(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_ = value;
}

// optional int32 x_advance = 3;
inline bool GlyphLayout::has_x_advance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GlyphLayout::clear_x_advance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_advance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t GlyphLayout::x_advance() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.x_advance)
  return _internal_x_advance();
}
inline void GlyphLayout::set_x_advance(::int32_t value) {
  _internal_set_x_advance(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.x_advance)
}
inline ::int32_t GlyphLayout::_internal_x_advance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_advance_;
}
inline void GlyphLayout::_internal_set_x_advance(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_advance_ = value;
}

// optional int32 x_offset = 4;
inline bool GlyphLayout::has_x_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GlyphLayout::clear_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_offset_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GlyphLayout::x_offset() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.x_offset)
  return _internal_x_offset();
}
inline void GlyphLayout::set_x_offset(::int32_t value) {
  _internal_set_x_offset(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.x_offset)
}
inline ::int32_t GlyphLayout::_internal_x_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_offset_;
}
inline void GlyphLayout::_internal_set_x_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_offset_ = value;
}

// optional int32 y_offset = 5;
inline bool GlyphLayout::has_y_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GlyphLayout::clear_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_offset_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GlyphLayout::y_offset() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.y_offset)
  return _internal_y_offset();
}
inline void GlyphLayout::set_y_offset(::int32_t value) {
  _internal_set_y_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.y_offset)
}
inline ::int32_t GlyphLayout::_internal_y_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_offset_;
}
inline void GlyphLayout::_internal_set_y_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_offset_ = value;
}

// optional int32 color = 6;
inline bool GlyphLayout::has_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GlyphLayout::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GlyphLayout::color() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.color)
  return _internal_color();
}
inline void GlyphLayout::set_color(::int32_t value) {
  _internal_set_color(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.color)
}
inline ::int32_t GlyphLayout::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_;
}
inline void GlyphLayout::_internal_set_color(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_ = value;
}

// optional double lefttatweel = 7;
inline bool GlyphLayout::has_lefttatweel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void GlyphLayout::clear_lefttatweel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lefttatweel_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double GlyphLayout::lefttatweel() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.lefttatweel)
  return _internal_lefttatweel();
}
inline void GlyphLayout::set_lefttatweel(double value) {
  _internal_set_lefttatweel(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.lefttatweel)
}
inline double GlyphLayout::_internal_lefttatweel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lefttatweel_;
}
inline void GlyphLayout::_internal_set_lefttatweel(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lefttatweel_ = value;
}

// optional double righttatweel = 8;
inline bool GlyphLayout::has_righttatweel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void GlyphLayout::clear_righttatweel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.righttatweel_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double GlyphLayout::righttatweel() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.righttatweel)
  return _internal_righttatweel();
}
inline void GlyphLayout::set_righttatweel(double value) {
  _internal_set_righttatweel(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.righttatweel)
}
inline double GlyphLayout::_internal_righttatweel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.righttatweel_;
}
inline void GlyphLayout::_internal_set_righttatweel(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.righttatweel_ = value;
}

// optional bool beginsajda = 9;
inline bool GlyphLayout::has_beginsajda() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void GlyphLayout::clear_beginsajda() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.beginsajda_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool GlyphLayout::beginsajda() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.beginsajda)
  return _internal_beginsajda();
}
inline void GlyphLayout::set_beginsajda(bool value) {
  _internal_set_beginsajda(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.beginsajda)
}
inline bool GlyphLayout::_internal_beginsajda() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.beginsajda_;
}
inline void GlyphLayout::_internal_set_beginsajda(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.beginsajda_ = value;
}

// optional bool endsajda = 10;
inline bool GlyphLayout::has_endsajda() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void GlyphLayout::clear_endsajda() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endsajda_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool GlyphLayout::endsajda() const {
  // @@protoc_insertion_point(field_get:protobuf.GlyphLayout.endsajda)
  return _internal_endsajda();
}
inline void GlyphLayout::set_endsajda(bool value) {
  _internal_set_endsajda(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:protobuf.GlyphLayout.endsajda)
}
inline bool GlyphLayout::_internal_endsajda() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endsajda_;
}
inline void GlyphLayout::_internal_set_endsajda(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endsajda_ = value;
}

// -------------------------------------------------------------------

// Sura

// string name = 1;
inline void Sura::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Sura::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.Sura.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Sura::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.Sura.name)
}
inline std::string* Sura::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Sura.name)
  return _s;
}
inline const std::string& Sura::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Sura::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Sura::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Sura::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.Sura.name)
  return _impl_.name_.Release();
}
inline void Sura::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Sura.name)
}

// int32 page_number = 2;
inline void Sura::clear_page_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_number_ = 0;
}
inline ::int32_t Sura::page_number() const {
  // @@protoc_insertion_point(field_get:protobuf.Sura.page_number)
  return _internal_page_number();
}
inline void Sura::set_page_number(::int32_t value) {
  _internal_set_page_number(value);
  // @@protoc_insertion_point(field_set:protobuf.Sura.page_number)
}
inline ::int32_t Sura::_internal_page_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_number_;
}
inline void Sura::_internal_set_page_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_number_ = value;
}

// int32 x = 3;
inline void Sura::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t Sura::x() const {
  // @@protoc_insertion_point(field_get:protobuf.Sura.x)
  return _internal_x();
}
inline void Sura::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.Sura.x)
}
inline ::int32_t Sura::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Sura::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 4;
inline void Sura::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t Sura::y() const {
  // @@protoc_insertion_point(field_get:protobuf.Sura.y)
  return _internal_y();
}
inline void Sura::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.Sura.y)
}
inline ::int32_t Sura::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Sura::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // quran_2eproto_2epb_2eh
